{"version":3,"file":"index.js","sources":["../src/logger.js","../src/utils.js","../src/index.js"],"sourcesContent":["'use strict';\nconst chalk = require('chalk');\nexport default class {\n  _chalk(text, color='white') {\n    return chalk[color](text);\n  }\n\n  log(text) {\n    console.log(this._chalk(text));\n  }\n\n  warn(text) {\n    console.warn(this._chalk(text, 'yellow'));\n  }\n\n  error(text) {\n    console.error(this._chalk(text, 'red'));\n  }\n\n}\n","'use strict';\nconst spawn = require('child_process').spawn;\nimport Logger from './logger.js';\nconst logger = new Logger();\nconst inquirer = require('inquirer');\nconst logUpdate = require('log-update');\n\n\nexport default class {\n\n  spawn(command, args) {\n    return spawn(command, args);\n  }\n\n  cp(path, destination) {\n    const cp = spawn('cp', [path, destination]);\n\n    cp.stderr.on('data', data => {\n      logger.warn(data.toString());\n    });\n  }\n\n  backup(paths) {\n    for (let path of paths) {\n      this.logUpdate('backing up');\n      this.cp(path, `${path}.backup`);\n    }\n  }\n\n  restore(paths) {\n    for (let path of paths) {\n      this.logUpdate('undoing AP changes, restoring the network');\n      this.cp(`${path}.backup`, path);\n    }\n  }\n\n  prompt(questions) {\n    return new Promise((resolve, reject) => {\n      inquirer.prompt(questions).then(answers => {\n        resolve(answers)\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  logUpdate(message) {\n    logUpdate(logger._chalk(message, 'cyan'));\n  }\n}\n","'use strict';\nimport Utils from './utils';\nimport Logger from './logger.js';\nconst {stat, readFile, writeFile, unlink} = require('fs');\nlet utils = new Utils();\nlet logger = new Logger();\n(() => {\n  class RpiAPSetup {\n\n    constructor() {\n      const args = process.argv;\n      const arg = args[args.length - 1];\n      if (arg === '-y' || arg === 'yes' || arg === 'y') {\n        this.yesForAll = true;\n      }\n      this.backupConfigs();\n      this.installPackages().then(() => {\n        this.setupAP();\n      });\n\n      process.on('exit', code => {\n        if (code !== 0) {\n          this.restore();\n        }\n      });\n    }\n\n    backupConfigs() {\n      utils.backup([\n        '/etc/udhcpd.conf',\n        '/etc/default/udhcpd',\n        '/etc/network/interfaces',\n        '/etc/hostapd/hostapd.conf',\n        '/etc/default/hostapd',\n        '/etc/sysctl.conf',\n        '/etc/iptables.ipv4.nat'\n      ]);\n    }\n\n    installPackages() {\n      return new Promise(resolve => {\n        const install = utils.spawn('apt-get', ['install', 'udhcpd', 'hostapd', '-y']);\n        install.on('error', error => {\n          logger.error(error);\n        });\n        install.on('close', (code) => {\n          if (code !== 0) {\n            logger.error('error installing apt-get packages');\n          }\n          resolve();\n          install.stdin.end();\n        });\n      });\n    }\n\n    promiseTemplates(opts={password: 'CurlyEyebrows692', ssid: 'RL-001', router: 100, dns: '8.8.8.8 8.8.4.4'}) {\n      return new Promise((resolve, reject) => {\n        utils.logUpdate('Setting up templates');\n\n        this.templates = [];\n\n        const templates = [\n          this.template(__dirname + '/templates/udhcpd.conf', opts),\n          this.template(__dirname + '/templates/hostapd', opts),\n          this.template(__dirname + '/templates/hostapd.conf', opts),\n          this.template(__dirname + '/templates/interfaces', opts),\n          this.template(__dirname + '/templates/sysctl.conf', opts),\n          this.template(__dirname + '/templates/iptables.ipv4.nat', opts)\n        ];\n\n        Promise.all(templates).then(() => {\n          resolve();\n        });\n      });\n    }\n\n    setupAP() {\n      if (this.yesForAll) {\n        this.promiseTemplates().then(() => {\n          this.configure();\n        });\n      } else {\n        this.promptUser().then(answers => {\n          this.promiseTemplates(answers).then(() => {\n            this.configure();\n          });\n        });\n      }\n    }\n\n    restoreNetwork() {\n      return new Promise((resolve, reject) => {\n        utils.restore([\n          '/etc/udhcpd.conf',\n          '/etc/default/udhcpd',\n          '/etc/network/interfaces',\n          '/etc/hostapd/hostapd.conf',\n          '/etc/default/hostapd',\n          '/etc/sysctl.conf',\n          '/etc/iptables.ipv4.nat'\n        ]);\n      });\n    }\n\n    promptUser() {\n      return new Promise(resolve => {\n        const questions = [{\n          type: 'input',\n          name: 'dns',\n          message: 'Please provide DNS address.',\n          default: '8.8.8.8 8.8.4.4'\n        }, {\n          type: 'input',\n          name: 'ssid',\n          message: 'AP SSID',\n          default: 'RF-001'\n        }, {\n          type: 'input',\n          name: 'password',\n          message: 'AP password',\n          hidden: true,\n          default: 'CurlyEyebrows692'\n        }, {\n          type: 'input',\n          name: 'router',\n          message: 'IP 0.0.x.0',\n          default: 100\n        }];\n        utils.prompt(questions).then(answers => {\n          resolve(answers);\n        });\n      });\n    }\n\n    configure() {\n      this.configureDHCP().then(() => {\n        this.configureInterfaces().then(() => {\n          this.configureApd().then(() => {\n            this.configureNAT().then(() => {\n              utils.spawn('touch', ['/var/lib/misc/udhcpd.leases']);\n\n              utils.logUpdate('Initialising AP');\n              utils.spawn('service', ['hostapd', 'start']);\n              utils.spawn('update-rc.d', ['hostapd', 'enable']);\n\n              utils.logUpdate('Initialising DHCP server');\n              utils.spawn('service', ['udhcpd', 'start']);\n              utils.spawn('update-rc.d', ['udhcpd', 'enable']);\n\n              utils.logUpdate('Configuration finished!');\n\n              utils.spawn('reboot');\n            });\n          });\n        });\n      });\n    }\n\n    configureDHCP() {\n      utils.logUpdate('Configuring DHCP');\n      return new Promise(resolve => {\n          // this.transformFile('/etc/dhcpcd.conf', 'denyinterfaces wlan0'),\n        this.transformFile('/etc/udhcpd.conf', this.templates['udhcpd.conf']).then(() => {\n          resolve();\n        });\n      });\n    }\n\n    configureInterfaces() {\n      return new Promise(resolve => {\n        utils.logUpdate('Configuring interfaces');\n        const transforms = [\n          this.transformFile('/etc/network/interfaces', this.templates['interfaces'])\n        ]\n        Promise.all(transforms).then(() => {\n          resolve();\n        });\n      });\n    }\n\n    configureApd() {\n      utils.logUpdate('Configuring hostapd');\n      return new Promise(resolve => {\n        const transforms = [\n          this.transformFile('/etc/default/hostapd', this.templates['hostapd']),\n          this.transformFile('/etc/hostapd/hostapd.conf', this.templates['hostapd.conf'])\n        ]\n        Promise.all(transforms).then(() => {\n          resolve();\n        });\n      });\n    }\n\n    configureNAT() {\n      return new Promise(resolve => {\n        utils.logUpdate('Configuring NAT');\n        const transforms = [\n          this.transformFile('/etc/sysctl.conf', this.templates['sysctl.conf']),\n          this.transformFile('/etc/iptables.ipv4.nat', this.templates['iptables.ipv4.nat'])\n        ]\n        Promise.all(transforms).then(() => {\n          resolve();\n        });\n      });\n    }\n\n    /**\n     * @return {string} someFilename\n     * @param {string} path\n     */\n    nameFromPath(path) {\n      return path.match(/\\/(?:.(?!\\/))+$/g)[0].replace('/', '');\n    }\n\n    /**\n     * saves a template into templates\n     * @param {string} path path/to/template\n     * @param {object} args when {address: 0.0.0.0} is given <%= address %> will become 0.0.0.0\n     */\n    template(path, args) {\n      return new Promise((resolve, reject) => {\n        const name = this.nameFromPath(path);\n        readFile(path, 'utf-8', (err, content) => {\n          if (Object.keys(args).length) {\n            for (let arg of Object.keys(args)) {\n              if (content.includes(`<%= ${arg} %>`)) {\n                let reg = new RegExp('<%= ' + arg + ' %>', ['g']);\n                content = content.replace(reg, args[arg])\n                this.templates[name] = content;\n              }\n            }\n          } else {\n            this.templates[name] = content;\n          }\n          resolve();\n        });\n      });\n    }\n\n    /**\n     * @param {string} path file location\n     * @param {string} context the context to add or remove\n     */\n    transformFile(path, context) {\n      return new Promise((resolve, reject) => {\n        writeFile(path, context, err => {\n          resolve();\n        });\n      });\n    }\n  }\n  return new RpiAPSetup();\n})();\n"],"names":["logger"],"mappings":"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"}